# This is a list of commands to be run when setting up a Windows system for
# psychoacoustics at LABS^N. It is not much of a "script" in that it is mostly
# instructions on what to download and double-click, and in what order.
# However, there are a few lines of code runnable in Git Bash that will save
# you some setup time. It is recommended that you proceed in serial order
# (don't skip around).

# MATLAB & PSYCHTOOLBOX
# If you need MATLAB, it has to be installed by I-LABS I.T. staff (for
# licensing reasons). It is recommended to do this first, in case anything
# goes wrong and the machine needs to be wiped.
# PsychToolbox prerequisites:
# install SVN, GStreamer, & "MS Visual C++ 2010 redistributable"
# from downloadable EXEs (these links are current as of 2015 December):
# https://sliksvn.com/download/
# http://gstreamer.freedesktop.org/
# https://www.microsoft.com/en-us/download/details.aspx?id=14632
# After that, follow the instructions at http://psychtoolbox.org/

# MISCELLANEOUS PROGRAMS: install from downloadable EXEs
# 7zip: http://www.7-zip.org/
# VirtualCloneDrive: http://www.slysoft.com/en/virtual-clonedrive.html
# Git Bash: https://git-scm.com/downloads
# Miniconda (python 2.7, 64-bit): http://conda.pydata.org/miniconda.html
# NOTE: make sure when you install miniconda to select "add to PATH" during
# installation so that python / conda become available in Git Bash terminals.
# Audacity: http://audacityteam.org/
# Praat: http://praat.org/
# NOTE: praat.exe is *the* standalone app; there is no "installer".  Copy it to
# a sensible place where it won't get accidentally deleted, and add a shortcut
# to the start menu / desktop.

# TDT
# Install the TDT drivers and ActiveX controls **from the CD**.  There is an ISO
# of the on LESTER (login required) that you can mount with "VirtualCloneDrive":
# https://lester.ilabs.uw.edu/dav/labdocs/ISOs/
# After installing, go to the TDT downloads page and download the installers
# for the "TDT drivers" and the "ActiveX controls", and run them to upgrade what
# was installed from the CD. This 2-step process is necessary because the
# downloadable installer for the ActiveX controls requires a password if it
# doesn't detect an existing installed version.

# EYELINK
# Even if you're not connecting this computer to an EyeLink, it should have
# the EyeLink Developer's Kit installed (it's a dependency for pyeparse).
# Get it here (requires login; use the lab low-security credentials):
# https://www.sr-support.com/showthread.php?6-EyeLink-Developers-Kit-for-Windows-%28Windows-Display-Software%29

# AVBIN
# AVbin is a wrapper around encoding/decoding libraries, necessary for pyglet
# to be able to read compressed audio/video. Check the website
# (http://avbin.github.io/AVbin/Download.html) to make sure the URL below
# is the most current version, and install via EXE:
# https://github.com/downloads/AVbin/AVbin/AVbin10-win64.exe

# VARIOUS PYTHON MODULES
# run this in a Git Bash terminal:
conda install numpy scipy matplotlib pandas pywin32 nose h5py spyder
pip install pyglet TDTPy

# SPYDER
# Spyder is installed above via conda (so that all its dependencies are there),
# but now we remove it and install from downloaded EXE so we get menu
# integration, etc. Run this in a Git Bash terminal:
conda remove spyder
# now install via EXE from https://github.com/spyder-ide/spyder/releases

# PYTHON MODULES NOT AVAILABLE THROUGH CONDA / PIP
# expyfun, pyeparse, mne-python, h5io
# These are all going in ~/Builds. Run these lines in a Git Bash terminal:
cd
mkdir Builds

# expyfun
cd ~/Builds
git clone https://github.com/LABSN/expyfun.git
cd expyfun
python setup.py develop

# pyeparse
cd ~/Builds
git clone https://github.com/pyeparse/pyeparse.git
cd pyeparse
python setup.py develop

# mne-python
cd ~/Builds
git clone https://github.com/mne-tools/mne-python.git
cd mne-python
python setup.py develop

# h5io
cd ~/Builds
git clone https://github.com/h5io/h5io.git
cd h5io
python setup.py develop

# OTHER CUSTOMIZATIONS
# adding "make" to Git Bash (NOTE: this didn't work):
# http://sourceforge.net/projects/mingw/files/MSYS/Base/make/make-3.81-3/
# unzip (twice) with 7-zip, rename bin-make.exe to make.exe and move to
# C:\Users\labuser\AppData\Local\Programs\Git\bin

# SETTING UP WEBDAV ACCESS TO LESTER
# Setup access to LESTER using the Windows "Add Network Drive" wizard.
# Here is the URL: https://lester.ilabs.uw.edu/dav/labdocs
# LESTER uses the low-security lab credentials for login.
